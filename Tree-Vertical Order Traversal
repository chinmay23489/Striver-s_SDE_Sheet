vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    //    Write your code here.

    vector<int>ans;
    if(root==NULL){
        return ans;
    }
    queue<pair<TreeNode<int>*,int>>q;
    map<int,vector<int>>m;
    q.push({root,0});

    while(!q.empty()){
        auto it=q.front();
        q.pop();
        TreeNode<int>*frontNode=it.first;
        int HD=it.second;

        m[HD].push_back(frontNode->data);
        if(frontNode->left){
            q.push({frontNode->left,HD-1});
        }
        if(frontNode->right){
            q.push({frontNode->right,HD+1});
        }
    }

    for(auto i:m){
        for(auto j:i.second){
            ans.push_back(j);
        }
    }
    return ans;
}
