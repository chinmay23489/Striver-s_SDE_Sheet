/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int>ans;
        map<int,int>m;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        
        while(!q.empty())
        {
            pair<Node*,int>temp=q.front();
            q.pop();
            
            Node*frontNode=temp.first;
            int HD=temp.second;
            
            if(m.find(HD)==m.end())
            {
                m[HD]=frontNode->data;
            }
            
            if(frontNode->left){
                q.push({frontNode->left,HD-1});
            }
            if(frontNode->right){
                q.push({frontNode->right,HD+1});
            }
        }
        for(auto i:m){
            ans.push_back(i.second);
        }
        return ans;
    }

};
