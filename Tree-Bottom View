//Function to return a list containing the bottom view of the given tree.

class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        
        vector<int>ans;
        map<int,int>m;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        
        while(!q.empty())
        {
            pair<Node*,int>temp=q.front();
            q.pop();
            
            Node*frontNode=temp.first;
            int HD=temp.second;
            
            m[HD]=frontNode->data;
            if(frontNode->left){
                q.push({frontNode->left,HD-1});
            }
            if(frontNode->right){
                q.push({frontNode->right,HD+1});
            }
        }
        for(auto i:m){
            ans.push_back(i.second);
        }
        return ans;
    }
};
